Use the /usr/sbin/getenforce or /usr/sbin/sestatus commands to check the status of SELinux. The getenforce command returns Enforcing, Permissive, or Disabled. The getenforce command returns Enforcing when SELinux is enabled (SELinux policy rules are enforced).
/usr/sbin/getenforce
/usr/sbin/sestatus

sudo /etc/cron.daily/logrotate

/etc/crontab
0 */2 * * * root script > /var/log/upgrd.log 2>&1

#hrdwr info
lspci  -v | grep -i wireless

dnf erase rhythmbox evolution totem thunderbird nano

dnf upgrade -y

dnf install glibc binutils autoconf gcc gcc-c++ libstdc++ libstdc++-devel gdb ccache valgrind

dnf install tlp tlp-rdw htop wireshark gnome-tweak-tool vim vim-enhanced tmux p7zip p7zip-plugins evince zsh

dnf install ncurses-devel ncurses libselinux-devel dkms acl kernel-devel kernel-headers

dnf install pycryptopp python-crypto python-cryptography libffi-devel python-devel openssl-devel python-pip

dnf install –nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
dnf install –nogpgcheck http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

dnf install gimp ffmpeg avconv
dnf --nogpgcheck install google-chrome-stable_current_x86_64.rpm

#VirtualBox
Creating group 'vboxusers'. VM users must be member of that group!
sudo usermod -a -G vboxusers r
#VirtualBox & VMware in SecureBoot(UEFI) Linux
http://gorka.eguileor.com/category/technology/linux/
a. systemctl status vboxdrv
b. modprobe -v vboxdrv
c. Creating an X.509 Key Pair to sign the driver
	openssl req -new -x509 -newkey rsa:2048 -keyout vboxdrv_X.509.priv -outform DER -out vboxdrv_X.509.der -nodes -days 36500 -subj "/CN=vboxdrv_X.509_Org/"
In the above command, replace vboxdrv_X.509 with the name of the file you want for the key and vboxdrv_X.509_Org with the Common Name you want to use. It's usually the organization that signs it.

Now you just need to sign the driver, but where's the driver located?
d. modinfo vboxdrv
   e.g. 
	filename:       /lib/modules/4.0.7-300.fc22.x86_64/extra/vboxdrv.ko
	version:        5.0.0 (0x00230001)
	license:        GPL
	description:    Oracle VM VirtualBox Support Driver
	author:         Oracle Corporation
	srcversion:     BB52120EF916D88D829D91E
	depends:        
	vermagic:       4.0.7-300.fc22.x86_64 SMP mod_unload 
	parm:           force_async_tsc:force the asynchronous TSC mode (int)

e. sign the module using modinfo to locate the driver:
	/usr/src/kernels/$(uname -r)/scripts/sign-file sha256 ./vboxdrv_X.509.priv ./vboxdrv_X.509.der $(modinfo -n vboxdrv)
   to confirm that the module has been signed:
	modinfo vboxdrv
   e.g.
	filename:       /lib/modules/4.0.7-300.fc22.x86_64/extra/vboxdrv.ko
	version:        5.0.0 (0x00230001)
	license:        GPL
	description:    Oracle VM VirtualBox Support Driver
	author:         Oracle Corporation
	srcversion:     BB52120EF916D88D829D91E
	depends:        
	vermagic:       4.0.7-300.fc22.x86_64 SMP mod_unload 
	signer:         vboxdrv_X.509_Org
	sig_key:        C9:50:B6:C1:A3:05:BC:9C:4D:64:65:49:2F:CC:E5:8A:69:9B:17:E2
	sig_hashalgo:   sha256
	parm:           force_async_tsc:force the asynchronous TSC mode (int)

f. To enroll the public key in the vboxdrv_X.509 (Module owned Key), the UEFI partition must have MokManager.efi installed.
   Now add the public key to shim's vboxdrv_X.509 list:
	mokutil --import vboxdrv_X.509.der
	input password: 
	input password again: 

g. after reboot you can check that the key is in the system:
	user@localhost:$ keyctl list %:.system_keyring
	112560593: ---lswrv 0 0 asymmetric: Fedora kernel signing key: e948c9015e04bd4cd5879fe2f9230a1d70859c7d
	489921950: ---lswrv 0 0 asymmetric: Fedora Secure Boot CA: fde32599c2d61db1bf5807335d7b20e4cd963b42
	98641885: ---lswrv 0 0 asymmetric: vboxdrv_X.509_Org: d5d3e2008907a7cebc8914780bd29b03fecc214b
	525156767: ---lswrv 0 0 asymmetric: Microsoft Corporation UEFI CA 2011: 13adbf4309bd82709c8cd54f316ed522988a1bd4
	1001714488: ---lswrv 0 0 asymmetric: Microsoft Windows Production PCA 2011: a92902398e16c49778cd90f99e4f9ae17c55af53
h. And that it was EFI who loaded it:
	user@localhost:$ dmesg | grep 'EFI: Loaded cert'
	[ 0.456158] EFI: Loaded cert 'Microsoft Windows Production PCA 2011: a92902398e16c49778cd90f99e4f9ae17c55af53' linked to '.system_keyring'
	[ 0.456194] EFI: Loaded cert 'Microsoft Corporation UEFI CA 2011: 13adbf4309bd82709c8cd54f316ed522988a1bd4' linked to '.system_keyring'
	[ 0.457111] EFI: Loaded cert 'vboxdrv_X.509_Org: d5d3e2008907a7cebc8914780bd29b03fecc214b' linked to '.system_keyring'
	[ 0.457768] EFI: Loaded cert 'Fedora Secure Boot CA: fde32599c2d61db1bf5807335d7b20e4cd963b42' linked to '.system_keyring'

#https://github.com/goagent/goagent
#cp prxpy /etc/init.d/
#chkconfig --level 35 prxpy on

cp shtdwnscrpt-fedora /etc/init.d/
ln -s /etc/init.d/shtdwnscrpt-fedora /etc/rc0.d/k99shtdwnscrpt-fedora
ln -s /etc/init.d/shtdwnscrpt-fedora /etc/rc6.d/k99shtdwnscrpt-fedora

#err:
Peer's Certificate issuer is not recognized
Peer's certificate issuer has been marked as not trusted by the user

gnutls-cli -p 443 github.com

#check current shell in linux
$ ps -fp $$
UID        PID  PPID  C STIME TTY          TIME CMD
r         2262  2202  0 10:43 pts/0    00:00:00 bash
$ echo $0
bash
$ echo $SHELL
/bin/bash

# default shell --> zsh
chsh -s /bin/zsh
file /usr/bin/sh
/usr/bin/sh: symbolic link to `bash'

git branch
git branch -r
git status

# reassign PRNTSCRN to open screenshot dialog
gnome-screenshot -i

#turn off screen
xset dpms force off
#turn off and lock screen 

# mkdir
mkdir ~/gthb/xrcs
mkdir ~/gthb/неkod
mkdir ~/gthb/wbst
mkdir ~/lflssn
mkdir ~/"hlth(здоровье)" #health
mkdir ~/"oros(Русский)"
mkdir ~/"lsr(досуг)"
mkdir ~/chess
mkdir ~/mgl
mkdir ~/math
mkdir ~/voice
mkdir ~/finance
mkdir ~/bsnss-entrprnr
mkdir ~/"hack(howto)"
mkdir ~/fruglthrft #frugal thrift minimalist living
mkdir ~/btкоин (Биткоин)
mkdir ~/eecs-ict
mkdir ~/nixcpp
mkdir ~/c
mkdir ~/embnix
mkdir ~/nixpythn
mkdir ~/nixc3d
mkdir ~/ambidexterity

#disable Adobe Flash Player in Chrome:
chrome://plugins

#git pull
/home/r/benchmark		#microbenchmark support library, google
/home/r/CppCon2015
/home/r/CppCoreGuidelines
/home/r/g3log
/home/r/g3sinks
/home/r/Eloquent-JavaScript
/home/r/node			#nodejs
/home/r/QueueNado
/home/r/todomvc
/home/r/react
/home/r/react-native
/home/r/bootlint
/home/r/ModernCpp
/home/r/java8-tutorial
/home/r/hapi			#Server Framework for Node.js http://hapijs.com
/home/r/MVARobotics
/home/r/mean			#MEAN (Mongo, Express, Angular, Node) - A Simple, Scalable and Easy starting point for full stack javascript web development - utilizing many of the best practices we've found on the way http://mean.io
